{"version":3,"sources":["images/mesto_logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","utils/formValidator.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","mestoLogo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","like","link","name","onClick","onCardClick","type","onCardLike","length","onCardDelete","Main","avatar","onEditAvatar","about","onEditProfile","aria-label","onAddPlace","cards","map","i","Footer","ImagePopup","isOpen","e","target","currentTarget","onClose","api","baseUrl","token","this","_baseUrl","_token","fetch","headers","authorization","then","res","ok","json","Promise","reject","status","userInfoObj","method","body","JSON","stringify","inputsInfoObject","cardId","doILikedCard","imageId","url","formValidator","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorSelector","_formSelector","_inputSelector","_submitButtonSelector","_inactiveButtonClass","_inputErrorClass","_errorSelector","formNameSelector","_validatedFormElement","document","querySelector","_submitButton","_inputElements","Array","from","querySelectorAll","input","classList","add","id","textContent","validationMessage","remove","validity","valid","_hideInputError","_showInputError","_hasInvalidInput","disabled","forEach","addEventListener","evt","preventDefault","_toggleButtonState","_isValid","PopupWithForm","useEffect","selectForm","validateForm","clearPopupFromErrors","onSubmit","noValidate","title","children","buttonText","EditProfilePopup","useState","setName","description","setDescription","onUpdateUser","onChange","value","minLength","maxLength","required","placeholder","EditAvatarPopup","avatarLinkRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","placeName","setPlaceName","placeLink","setPlaceLink","ConfirmPopup","onConfirm","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","closeAllPopups","setSelectedCard","cohort","setCurrentUser","getUserInfo","result","catch","err","console","log","selectedCard","setCards","getInitialCards","Provider","likeToggleCard","newCard","newCards","c","obj","editUserInfo","finally","newPlaceObj","addNewCard","changeAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a3999ae9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mesto_logo.a307e1c4.svg\";","import mestoLogo from '../images/mesto_logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <div className=\"logo header__logo\">\n        <img className=\"logo__img\" src={mestoLogo} alt=\"Проект Место\"/>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\n\nexport default CurrentUserContext;\n","import React from 'react';\n\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\n\nfunction Card(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const isOwn = props.card.owner._id === currentUser._id;\n\n  const isLiked = props.card.likes.some(like => like._id === currentUser._id);\n\n  return (\n    <li className=\"place\">\n      <div className=\"place__img-container\">\n        <img\n          className=\"place__img\"\n          src={props.card.link}\n          alt={props.card.name}\n          onClick={() => props.onCardClick(props.card)}\n        />\n      </div>\n      <div className=\"place__description\">\n        <h2 className=\"place__title\">{props.card.name}</h2>\n        <div className=\"place__like-container\">\n          <button\n            className={`place__like-button ${isLiked && 'place__like-button_liked'}`}\n            type=\"button\"\n            onClick={() => props.onCardLike(props.card)}>\n          </button>\n          <p className=\"place__like-counter\">{props.card.likes.length}</p>\n        </div>\n      </div>\n      <button\n        className={`place__delete-button ${!isOwn && 'place__delete-button_invisible'}`}\n        type=\"button\"\n        onClick={() => props.onCardDelete(props.card)}>\n      </button>\n    </li>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport Card from './Card.js';\n\nfunction Main(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n\n    <main className=\"main\">\n\n      <section className=\"profile\">\n        <div className=\"person\">\n          <div className=\"person__avatar-container\">\n            <div className=\"person__avatar-img-container\">\n            <img className=\"person__avatar\" src={currentUser.avatar} alt=\"Аватар\"/>\n            </div>\n            <div onClick={props.onEditAvatar} className=\"person__avatar-button\"></div>\n          </div>\n          <div className=\"person__edit\">\n            <div className=\"person__description\">\n              <h1 className=\"person__name\">{currentUser.name}</h1>\n              <p className=\"person__passion\">{currentUser.about}</p>\n            </div>\n            <button onClick={props.onEditProfile}\n              className=\"person__edit-button\" type=\"button\" aria-label=\"Редактировать\">\n            </button>\n          </div>\n        </div>\n        <button onClick={props.onAddPlace} className=\"add-button\" type=\"button\" aria-label=\"Добавить\"></button>\n      </section>\n\n      <section>\n          <ul className=\"places\">\n            {props.cards.map((card, i) =>\n            (<Card key={card._id} card={card}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete} />))}\n          </ul>\n      </section>\n\n    </main>\n\n  );\n}\n\nexport default Main;\n","function Footer() {\n  return(\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function ImagePopup(props) {\n  return (\n    <div className={`popup popup_place-view ${props.isOpen && 'popup_opened'}`}\n      onClick={(e) => {\n        if (e.target === e.currentTarget) {\n        props.onClose()\n      }}}>\n      <figure className=\"popup__figure\">\n        <img className=\"popup__place-image\" src={`${props.card.link}`} alt={`${props.card.name}`} />\n        <figcaption className=\"popup__place-caption\">{props.card.name}</figcaption>\n        <button className=\"popup__close popup__close_place-view\" type=\"button\" aria-label=\"Закрыть\"\n          onClick={props.onClose}>\n        </button>\n      </figure>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","class Api {\n  constructor({baseUrl, token}) {\n    this._baseUrl = baseUrl;\n    this._token = token;\n  }\n\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  editUserInfo(userInfoObj) {\n    return fetch(this._baseUrl + '/users/me', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: userInfoObj.name,\n        about: userInfoObj.about\n      })\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  addNewCard(inputsInfoObject) {\n    return fetch(this._baseUrl + '/cards', {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: inputsInfoObject.name,\n        link: inputsInfoObject.link\n      })\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  deleteCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  likeToggleCard(doILikedCard, imageId) {\n    if (!doILikedCard) {\n      return fetch(this._baseUrl + '/cards/likes/' + imageId, {\n        method: 'PUT',\n        headers: {\n          authorization: this._token,\n          'Content-Type': 'application/json'\n        }\n      })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return Promise.reject(`Ошибка: ${res.status}`);\n        }\n      })\n    } else {\n      return fetch(this._baseUrl + '/cards/likes/' + imageId, {\n        method: 'DELETE',\n        headers: {\n          authorization: this._token,\n          'Content-Type': 'application/json'\n        }\n      })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return Promise.reject(`Ошибка: ${res.status}`);\n        }\n      })\n    }\n  }\n\n  changeAvatar(url) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: url//.popupInputAvatarLink\n      })\n    })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-18',\n  token: '7d3b332b-dc1e-49e3-90aa-8e33833ea304'\n});\n\nexport default api;\n","class FormValidator {\n  constructor({\n    formSelector,\n    inputSelector,\n    submitButtonSelector,\n    inactiveButtonClass,\n    inputErrorClass,\n    errorSelector\n    }) {\n      this._formSelector = formSelector;\n      this._inputSelector = inputSelector;\n      this._submitButtonSelector = submitButtonSelector;\n      this._inactiveButtonClass = inactiveButtonClass;\n      this._inputErrorClass = inputErrorClass;\n      this._errorSelector = errorSelector;\n  }\n\n  selectForm(formNameSelector) {\n    this._validatedFormElement = document.querySelector(formNameSelector);\n    this._submitButton = this._validatedFormElement.querySelector(this._submitButtonSelector);\n    this._inputElements = Array.from(this._validatedFormElement.querySelectorAll(this._inputSelector));\n  }\n\n  _showInputError(input) {\n    input.classList.add(this._inputErrorClass);\n    const errorElement = this._validatedFormElement.querySelector(`#${input.id}-error`);\n    errorElement.textContent = input.validationMessage;\n  }\n\n  _hideInputError(input) {\n    input.classList.remove(this._inputErrorClass);\n    const errorElement = this._validatedFormElement.querySelector(`#${input.id}-error`);\n    errorElement.textContent = '';\n  }\n\n  _isValid(input) {\n    if (!input.validity.valid) {\n      this._showInputError(input);\n    } else {\n      this._hideInputError(input);\n    }\n  }\n\n  _hasInvalidInput() {\n    return this._inputElements.some((input) => {\n      return !input.validity.valid;\n    });\n  }\n\n  _toggleButtonState() {\n    if (this._hasInvalidInput()) {\n      this._submitButton.disabled = true;\n      this._submitButton.classList.add(this._inactiveButtonClass);\n    } else {\n      this._submitButton.disabled = false;\n      this._submitButton.classList.remove(this._inactiveButtonClass);\n    }\n  }\n\n  clearPopupFromErrors() {\n    if (this._inputElements.length === 0) {return};\n    this._inputElements.forEach((input) => {\n      this._hideInputError(input)});\n    this._submitButton.disabled = true;\n    this._submitButton.classList.add(this._inactiveButtonClass);\n  }\n\n  validateForm() {\n    if (this._inputElements.length === 0) {return}\n    this._validatedFormElement.addEventListener('submit', (evt) => {\n      evt.preventDefault()\n    });\n\n    this._toggleButtonState();\n\n    this._inputElements.forEach((input) => {\n      input.addEventListener('input', () => {\n        this._isValid(input);\n        this._toggleButtonState();\n      });\n    });\n  }\n}\n\nconst formValidator = new FormValidator({\n  formSelector: '.popup__container',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__submit',\n  inactiveButtonClass: 'popup__submit_disabled',\n  inputErrorClass: 'popup__input_state_error',\n  errorSelector: '.error'\n});\n\nexport default formValidator;\n","import React from 'react';\nimport formValidator from '../utils/formValidator.js';\n\nfunction PopupWithForm(props) {\n\n  //при открытии попапа выбирается его форма, активируется валидация,\n  //включается первичный дизейбл кнопки отправки\n  React.useEffect(() => {\n    if (props.isOpen) {\n      formValidator.selectForm(`.popup__container_${props.name}`);\n      formValidator.validateForm();\n      formValidator.clearPopupFromErrors();\n    }\n  }, [props.isOpen, props.name])\n\n  return(\n    <div className={`popup ${props.isOpen && 'popup_opened'} popup_${props.name}`}\n      onClick={(e) => {\n        if (e.target === e.currentTarget) {\n        props.onClose();\n      }}}>\n      <form onSubmit={(e) => props.onSubmit(e)}\n        className={`popup__container popup__container_${props.name}`} name={`${props.name}PopupForm`} noValidate>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <fieldset className=\"popup__content\">\n\n          {props.children}\n\n          <button className=\"popup__submit\" type=\"submit\">{props.buttonText}</button>\n        </fieldset>\n        <button\n          onClick={() => {\n            props.onClose();\n          }}\n          className={`popup__close popup__close_${props.name}`} type=\"button\" aria-label=\"Закрыть\">\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\n\nfunction EditProfilePopup(props) {\n  //стейты и хендлеры полей формы\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  // Подписка на контекст юзера\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // заносим данные контекста в поля формы\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);  //пропс isOpen для более корректной работы валидации\n\n\n  //обработчик отправки формы\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      buttonText=\"Сохранить\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}>\n\n      <input\n        onChange={handleChangeName}\n        value={name}\n        id=\"personName\" className=\"popup__input popup__name_profile\" name=\"popupInputName\"\n        type=\"text\" minLength=\"2\" maxLength=\"40\" required placeholder=\"Имя\"\n      />\n      <span id=\"personName-error\" className=\"error\"></span>\n      <input\n        onChange={handleChangeDescription}\n        value={description}\n        id=\"personPassion\" className=\"popup__input popup__passion_profile\" name=\"popupInputPassion\"\n        type=\"text\" minLength=\"2\" maxLength=\"200\" required placeholder=\"О себе\"\n      />\n      <span id=\"personPassion-error\" className=\"error\"></span>\n\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction EditAvatarPopup (props) {\n  //реф-объект для картинки аватара\n  const avatarLinkRef = React.useRef();\n\n  //для обнуления поля ввода при закрытии без отправки формы, во-имя корректной работы валидации\n  if (props.isOpen) {avatarLinkRef.current.value = ''};\n\n  //обработчик отправки формы со значением поля из рефа\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar(avatarLinkRef.current.value);\n    avatarLinkRef.current.value = '';\n  }\n\n  return(\n    <PopupWithForm\n      name=\"avatar\"\n      title=\"Обновить аватар\"\n      buttonText=\"Сохранить\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit} >\n\n      <input\n        //привязка рефа к DOM - input\n        ref={avatarLinkRef}\n        id=\"avatarLink\" className=\"popup__input popup__link_avatar\" name=\"popupInputAvatarLink\"\n        type=\"url\" required placeholder=\"Ссылка на аватар\"\n      />\n      <span id=\"avatarLink-error\" className=\"error\"></span>\n\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction AddPlacePopup(props) {\n  //стейты и хендлеры полей формы\n  const [placeName, setPlaceName] = React.useState('');\n  const [placeLink, setPlaceLink] = React.useState('');\n\n  //для обнуления поля ввода при закрытии без отправки формы, во-имя корректной работы валидации\n  React.useEffect(() => {\n    if (props.isOpen) {\n      setPlaceName('');\n      setPlaceLink('');\n    }}, [props.isOpen])\n\n  function handlePlaceName(e) {\n    setPlaceName(e.target.value);\n  }\n\n  function handlePlaceLink(e) {\n    setPlaceLink(e.target.value);\n  }\n\n  //обработчик отправки формы\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name: placeName,\n      link: placeLink\n    });\n  }\n\n\n  return(\n    <PopupWithForm\n      name=\"place\"\n      title=\"Новое место\"\n      buttonText=\"Создать\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      >\n\n      <input\n        onChange={handlePlaceName}\n        id=\"placeName\" className=\"popup__input popup__name_place\" name=\"popupInputPlace\"\n        type=\"text\" minLength=\"2\" maxLength=\"30\" required placeholder=\"Название\" value={placeName}\n      />\n      <span id=\"placeName-error\" className=\"error\"></span>\n      <input\n        onChange={handlePlaceLink}\n        id=\"placeLink\" className=\"popup__input popup__link_place\" name=\"popupInputLink\"\n        type=\"url\" required placeholder=\"Ссылка на картинку\" value={placeLink}\n      />\n      <span id=\"placeLink-error\" className=\"error\"></span>\n\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","import PopupWithForm from './PopupWithForm.js';\n\nfunction ConfirmPopup(props) {\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onConfirm();\n  }\n\n  return (\n    <PopupWithForm\n      name=\"confirm\"\n      title=\"Вы уверены?\"\n      buttonText=\"Да\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default ConfirmPopup;\n","import React from 'react';\n\nimport './App.css';\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ConfirmPopup from './ConfirmPopup.js';\n\n\nfunction App() {\n  // стейты и хендлы состояний попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  function handlePlaceImageClick() {\n    setIsImagePopupOpen(true);\n  }\n\n  function handleOpenConfirmPopupClick() {\n    setIsConfirmPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard({});\n  }\n\n\n  //стейт, хендлы и эффект контекста-юзера\n  const [currentUser, setCurrentUser] = React.useState({\n    about: \"\",\n   // avatar: \"\",\n    cohort: \"\",\n    name: \"\",\n    _id: \"75afb32823f9c1dc44155bd8\"\n  });\n\n  function handleUpdateUser(obj) {\n    api.editUserInfo(obj)\n    .then((result) => {\n      setCurrentUser(result);\n      closeAllPopups();\n    })\n    .catch(err => console.log(err))\n    .finally(closeAllPopups())\n  }\n\n  function handleUpdateAvatar(url) {\n    api.changeAvatar(url)\n    .then((result) => {\n      setCurrentUser(result);\n    })\n    .catch(err => console.log(err))\n    .finally(closeAllPopups())\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then((result) => {\n      setCurrentUser(result);\n    })\n    .catch(err => console.log(err))\n  }, []);\n\n\n  //стейт выбранной карточки и хендлы открытия попапов просмотра фотографии и подтверждения удаления\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    handlePlaceImageClick();\n  }\n\n  function handleCardDeleteClick(card) {\n    setSelectedCard(card);\n    handleOpenConfirmPopupClick();\n  }\n\n\n  //стейт, эффект и хендлы работы с массивом карточек мест\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getInitialCards()\n    .then((result) => {\n      setCards(result);\n    })\n    .catch(err => console.log(err))\n  }, []);\n\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.likeToggleCard(isLiked, card._id)\n    .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch(err => console.log(err))\n  }\n\n  //хендл удаления карточки запускается из попапа подтверждения\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n    .then((result) => {\n      const newCards = cards.filter((c) => {return (c._id !== card._id)});\n      setCards(newCards);\n    })\n    .catch(err => console.log(err))\n    .finally(closeAllPopups())\n  }\n\n  function handleAddPlaceSubmit(newPlaceObj) {\n    api.addNewCard(newPlaceObj)\n    .then((result) => {\n      setCards([result, ...cards]);\n    })\n    .catch(err => console.log(err))\n    .finally(closeAllPopups())\n  }\n\n\n  return (\n    <CurrentUserContext.Provider value = {currentUser}>\n      <div className=\"body\">\n        <div className=\"page body__page\">\n\n          <Header />\n\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            //onCardDelete={handleCardDelete}\n            onCardDelete={handleCardDeleteClick}\n          />\n\n          <Footer />\n\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          <ImagePopup\n            isOpen={isImagePopupOpen}\n            card={selectedCard}\n            onClose={closeAllPopups}\n          />\n\n          <ConfirmPopup\n            isOpen={isConfirmPopupOpen}\n            onClose={closeAllPopups}\n            onConfirm={() => handleCardDelete(selectedCard)}\n          />\n\n        </div>\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}